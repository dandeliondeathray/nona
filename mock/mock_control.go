// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dandeliondeathray/nona/control (interfaces: Target)

package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTarget is a mock of Target interface
type MockTarget struct {
	ctrl     *gomock.Controller
	recorder *MockTargetMockRecorder
}

// MockTargetMockRecorder is the mock recorder for MockTarget
type MockTargetMockRecorder struct {
	mock *MockTarget
}

// NewMockTarget creates a new mock instance
func NewMockTarget(ctrl *gomock.Controller) *MockTarget {
	mock := &MockTarget{ctrl: ctrl}
	mock.recorder = &MockTargetMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTarget) EXPECT() *MockTargetMockRecorder {
	return m.recorder
}

// NewRound mocks base method
func (m *MockTarget) NewRound(arg0 int64) {
	m.ctrl.Call(m, "NewRound", arg0)
}

// NewRound indicates an expected call of NewRound
func (mr *MockTargetMockRecorder) NewRound(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewRound", reflect.TypeOf((*MockTarget)(nil).NewRound), arg0)
}
