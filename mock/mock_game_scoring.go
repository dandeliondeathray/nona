// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dandeliondeathray/nona/game (interfaces: Scoring)

package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockScoring is a mock of Scoring interface
type MockScoring struct {
	ctrl     *gomock.Controller
	recorder *MockScoringMockRecorder
}

// MockScoringMockRecorder is the mock recorder for MockScoring
type MockScoringMockRecorder struct {
	mock *MockScoring
}

// NewMockScoring creates a new mock instance
func NewMockScoring(ctrl *gomock.Controller) *MockScoring {
	mock := &MockScoring{ctrl: ctrl}
	mock.recorder = &MockScoringMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockScoring) EXPECT() *MockScoringMockRecorder {
	return m.recorder
}

// ProduceScores mocks base method
func (m *MockScoring) ProduceScores(arg0 int64) {
	m.ctrl.Call(m, "ProduceScores", arg0)
}

// ProduceScores indicates an expected call of ProduceScores
func (mr *MockScoringMockRecorder) ProduceScores(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProduceScores", reflect.TypeOf((*MockScoring)(nil).ProduceScores), arg0)
}
